<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="ActivityDAO">
 	
 	<resultMap type="com.actibuddy.activity.model.dto.LocationDTO" id="locationResultMap">
 	   <id property="code" column="LOCATION_CODE"/>
 	   <result property="name" column="LOCATION_NAME"/>
 	   <result property="info" column="LOCATION_INFO"/>
 	   <result property="image" column="LOCATION_IMG"/>
 	   <result property="tip" column="GUIDE_TIP"/>
 	   <result property="visitMonth" column="VISIT_MONTH"/>
 	   <result property="visitName" column="VISIT_NAME"/>
 	</resultMap>
 	
 	<resultMap type="com.actibuddy.activity.model.dto.LocationAndActivityDTO" id="locationAndActivityResultMap">
 	   <id property="code" column="LOCATION_CODE"/>
 	   <result property="name" column="LOCATION_NAME"/>
 	   <result property="info" column="LOCATION_INFO"/>
 	   <result property="image" column="LOCATION_IMG"/>
 	   <result property="tip" column="GUIDE_TIP"/>
 	   <result property="visitMonth" column="VISIT_MONTH"/>
 	   <result property="visitName" column="VISIT_NAME"/>
 	   <result property="avg" column="AVG"/>
 	   <collection property="activityList" resultMap="activityResultMap"/>
 	</resultMap>
 	
 	<resultMap type="com.actibuddy.activity.model.dto.ActivityDTO" id="activityResultMap">
 	   <id property="code" column="ACTI_NUM"/>
 	   <result property="name" column="ACTI_NAME"/>
 	   <result property="location" column="LOCATION"/>
 	   <result property="price" column="PRICE"/>
 	   <result property="StartDate" column="START_DATE"/>
 	   <result property="EndDate" column="END_DATE"/>
 	   <result property="tip" column="ACTI_TIP"/>
 	   <result property="image" column="ACTI_IMG"/>
 	   <result property="image2" column="ACTI_IMG2"/>
 	   <result property="image3" column="ACTI_IMG3"/>
 	   <result property="loactionCode" column="LOCATION_CODE"/>
 	   <result property="activitTypeCode" column="ACTI_TYPE_NUM"/>
 	   <result property="userId" column="USER_ID"/>
 	   <result property="views" column="ACTI_VIEWS"/>
 	</resultMap>
 	
 	<resultMap type="com.actibuddy.activity.model.dto.ActiReviewDTO" id="reviewResultMap">
 	<id property="num" column="ACTI_REVIEW_NUM"/>
 	<result property="writeDate" column="ACTI_REVIEW_DATE"/>
 	<result property="actiNum" column="ACTI_NUM"/>
 	<result property="writerId" column="WRITER_ID"/>
 	<result property="title" column="ACTI_REVIEW_TITLE"/>
 	<result property="content" column="ACTI_REVIEW_CON"/>
 	<result property="reviewStar" column="ACTI_REVIEW_STAR"/>
 	<result property="image" column="ACTI_REVIEW_IMG"/>
 	<result property="recommend" column="ACTI_REVIEW_REC"/>
 	<result property="recYn" column="ACTI_REVIEW_REP_YN"/>
 	<result property="chooseOption" column="CHOOSE_OPTION"/>
 	</resultMap>
 	
 	<resultMap type="com.actibuddy.activity.model.dto.ActivityAndReviewDTO" id="activityAndReviewMap">
 	<id property="code" column="ACTI_NUM"/>
 	   <result property="name" column="ACTI_NAME"/>
 	   <result property="location" column="LOCATION"/>
 	   <result property="price" column="PRICE"/>
 	   <result property="StartDate" column="START_DATE"/>
 	   <result property="EndDate" column="END_DATE"/>
 	   <result property="tip" column="ACTI_TIP"/>
 	   <result property="image" column="ACTI_IMG"/>
 	   <result property="image2" column="ACTI_IMG2"/>
 	   <result property="image3" column="ACTI_IMG3"/>
 	   <result property="loactionCode" column="LOCATION_CODE"/>
 	   <result property="activitTypeCode" column="ACTI_TYPE_NUM"/>
 	   <result property="userId" column="USER_ID"/>
 	   <result property="avgStar" column="AVG"/>
 	   <result property="count" column="COUNT"/>
 	  <collection property="reviewList" resultMap="reviewResultMap"/>
 	</resultMap>
 	
 	<resultMap type="com.actibuddy.activity.model.dto.ActivityConditionDTO" id="conditionResultMap">
 	<id property="actiConNum" column="ACTI_CON_NUM"/>
 	<result property="conName" column="ACTI_CON_NAME"/>
 	<result property="conIcon" column="ACTI_CON_ICON"/>
 	</resultMap>
 	
 	<resultMap type="com.actibuddy.activity.model.dto.ActivityTypeDTO" id="typeResultMap">
 	<id property="actiTypeNum" column="ACTI_TYPE_NUM"/>
 	<result property="firstTypeNum" column="FIRST_TYPE_NUM"/>
 	<result property="firstTypeName" column="FIRST_TYPE_NAME"/>
 	<result property="secondTypeNum" column="SECOND_TYPE_NUM"/>
 	<result property="secondTypeName" column="SECOND_TYPE_NAME"/>
 	</resultMap>
 	
 	<resultMap type="com.actibuddy.activity.model.dto.ActivityOptionDTO" id="optionResultMap">
 	<id property="optionNum" column="OPTION_NUM"/>
 	<result property="price" column="OPTION_PRICE"/>
 	<result property="optionName" column="OPTION_NAME"/>
 	<result property="actiNum" column="ACTI_NUM"/>
 	</resultMap>
 	
 	<resultMap type="com.actibuddy.activity.model.dto.ActivityInfoDTO" id="activityInfoResultMap">
    <result property="avgStar" column="AVG"/>
 	<result property="count" column="COUNT"/>
 	<collection property="activityList" resultMap="activityResultMap"/>
 	<collection property="reviewList" resultMap="reviewResultMap"/>
 	<collection property="conditionList" resultMap="conditionResultMap"/>
 	<collection property="typeList" resultMap="typeResultMap"/>
 	<collection property="optionList" resultMap="optionResultMap"/>
 	<collection property="locationList" resultMap="locationResultMap"/>
 	</resultMap>
 	
 	<resultMap type="com.actibuddy.activity.model.dto.ActivityMainDTO" id="activityMainResultMap">
 	   <collection property="locationList" resultMap="locationResultMap"></collection>
 	   <collection property="activityList" resultMap="activityResultMap"></collection>
 	</resultMap>
 	
 	<resultMap type="com.actibuddy.activity.model.dto.PaymentDTO" id="paymentResultMap">
 	<id property="payNum" column="PAY_NUM"/>
 	<result property="payDate" column="PAY_DATE"/>
 	</resultMap>
 	
 	<!-- 액티비티 카테고리, 정렬로 정보를 구하는 쿼리문 -->
 	<select id="selectLocationInfo" resultMap="locationAndActivityResultMap" parameterType="hashMap">
	   SELECT  M.RNUM
             , M.*
        FROM  (SELECT    ROWNUM RNUM
                         , V.*
                 FROM (SELECT
	                          A.LOCATION_CODE
	                        , A.LOCATION_NAME
	                        , A.LOCATION_INFO
	                        , A.LOCATION_IMG
	                        , A.GUIDE_TIP
	                        , A.VISIT_MONTH
	                        , A.VISIT_NAME
	                        , B.ACTI_NUM
							, B.ACTI_NAME
							, B.LOCATION
							, B.PRICE
							, B.START_DATE
							, B.END_DATE
							, B.ACTI_TIP
							, B.ACTI_IMG
							, B.USER_ID
							, B.ACTI_IMG2
							, B.ACTI_IMG3
							, B.ACTI_VIEWS
                            , D.SECOND_TYPE_NAME
                         FROM LOCATION A
                              JOIN ACTIVITY_INFO B ON (A.LOCATION_CODE = B.LOCATION_CODE)
                              JOIN ACTI_TYPE D ON(B.ACTI_TYPE_NUM = D.ACTI_TYPE_NUM)
                       WHERE A.LOCATION_NAME = #{ locationName } )V    
                         
                         ) M
	      <where>
	 	    (M.RNUM BETWEEN  #{ startRow } and #{ endRow } )
	     <if test="price1 != null">
	     		AND M.PRICE BETWEEN #{ price1 } AND #{ price2 }
	     	</if>
	     	
	     	<if test="date != '' and date != null">
     		<![CDATA[
     		 AND M.END_DATE > #{ date }
     		 ]]>
	     	</if>
	     	
	     	<if test="sports != null ">
	     	AND M.SECOND_TYPE_NAME IN
	     	<foreach collection="sports" item="arr" index="index" open="(" close=")" separator=",">
	     	 #{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="tickets != null">
	     	AND M.SECOND_TYPE_NAME IN
	     	<foreach collection="tickets" item="arr" index="index" open="(" close=")" separator=",">
	     	 #{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="spas != null">
	     	AND M.SECOND_TYPE_NAME IN
	     	<foreach collection="spas" item="arr" index="index" open="(" close=")" separator=",">
	     	 #{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="tours != null">
	     	AND M.SECOND_TYPE_NAME IN
	     	<foreach collection="tours" item="arr" index="index" open="(" close=")" separator=",">
	     	 #{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="waters != null">
	     	AND M.SECOND_TYPE_NAME IN
	     	<foreach collection="waters" item="arr" index="index" open="(" close=")" separator=",">
	     	 #{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="selectAlls != null">
	     	AND M.SECOND_TYPE_NAME IN
	     	<foreach collection="selectAlls" item="arr" index="index" open="(" close=")" separator=",">
	     	#{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="selectAlls2 != null">
	     	AND M.SECOND_TYPE_NAME IN
	     	<foreach collection="selectAlls2" item="arr" index="index" open="(" close=")" separator=",">
	     	#{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="selectAlls3 != null">
	     	AND M.SECOND_TYPE_NAME IN
	     	<foreach collection="selectAlls3" item="arr" index="index" open="(" close=")" separator=",">
	     	#{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="selectAlls4 != null">
	     	AND M.SECOND_TYPE_NAME IN
	     	<foreach collection="selectAlls4" item="arr" index="index" open="(" close=")" separator=",">
	     	#{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="selectAlls5 != null">
	     	AND M.SECOND_TYPE_NAME IN
	     	<foreach collection="selectAlls5" item="arr" index="index" open="(" close=")" separator=",">
	     	#{ arr }
	     	</foreach>
	     	</if>
	     	
	     </where>
	     	<if test="sort != null and sort == 'views'">
	   			ORDER BY M.ACTI_VIEWS DESC
	     	</if>
	       <if test="sort != null and sort == 'random'">
	       	 	ORDER BY DBMS_RANDOM.RANDOM
	       </if>
	       <if test="sort != null and sort == 'price'">
	       	 	ORDER BY M.PRICE ASC
	       </if>
	       <if test="sort != null and sort == 'new'">
	       	 	ORDER BY M.START_DATE DESC
	       </if>
 	</select>
 	
 	<select id="selectActiName" resultMap="activityResultMap" parameterType="hashMap">
 					SELECT
							  B.ACTI_NAME
                         FROM LOCATION A
                              LEFT JOIN ACTIVITY_INFO B ON (A.LOCATION_CODE = B.LOCATION_CODE)
                              LEFT JOIN ACTI_TYPE D ON(B.ACTI_TYPE_NUM = D.ACTI_TYPE_NUM)
                        WHERE A.LOCATION_NAME = #{ locationName }      
 	</select>
 	
 	<select id="selectActivityInfo" resultMap="activityInfoResultMap" parameterType="hashMap">
       SELECT
               A.*
             , C.*
             , D.*
             , E.*
             , F.*
             , (SELECT ROUND(AVG(C.ACTI_REVIEW_STAR),1)
                  FROM ACTI_REVIEW C
                  JOIN ACTIVITY_INFO B ON (C.ACTI_NUM = B.ACTI_NUM)
                 WHERE B.ACTI_NAME = #{ actiName })AS AVG
             , (SELECT COUNT(C.ACTI_REVIEW_TITLE)
                  FROM ACTI_REVIEW C
      	          JOIN ACTIVITY_INFO B ON (C.ACTI_NUM = B.ACTI_NUM)
                 WHERE B.ACTI_NAME = #{ actiName })AS COUNT    
        FROM ACTIVITY_INFO A
        LEFT JOIN ACTI_CONDITION_HIS B ON (A.ACTI_NUM = B.ACTI_NUM)
        LEFT JOIN ACTI_CONDITION C ON (B.ACTI_CON_NUM = C.ACTI_CON_NUM)
        LEFT JOIN ACTI_TYPE D ON ( A.ACTI_TYPE_NUM = D.ACTI_TYPE_NUM)
        LEFT JOIN ACTI_OPTION E ON (A.ACTI_NUM = E.ACTI_NUM)
        LEFT JOIN LOCATION F ON (A.LOCATION_CODE = F.LOCATION_CODE)
       WHERE A.ACTI_NAME = #{ actiName }
 	</select>
 	
 	<select id="selectLocation" resultMap="locationResultMap">
 		SELECT
      		   A.LOCATION_NAME
             , A.LOCATION_INFO
     		 , A.LOCATION_IMG
  		  FROM LOCATION A
 	</select>
 	
 	
 	<select id="selectActivity" resultMap="locationAndActivityResultMap" parameterType="hashMap">
 	 SELECT   M.RNUM
            , M.*
         FROM  (SELECT ROWNUM RNUM
                       , V.*
			 		FROM (SELECT
			       		   A.LOCATION_NAME
			     		 , A.LOCATION_INFO
			     	 	 , A.LOCATION_IMG
			     		 , A.GUIDE_TIP
			     		 , A.VISIT_MONTH
			             , A.VISIT_NAME
			     		 , B.ACTI_NUM
			     		 , B.ACTI_NAME
			     		 , B.LOCATION
			     		 , B.PRICE
			     		 , B.START_DATE
			     		 , B.END_DATE
			     		 , B.ACTI_TIP
			     		 , B.ACTI_IMG
			     		 , B.LOCATION_CODE
			     		 , B.ACTI_TYPE_NUM
			     		 , B.USER_ID
			     		 , B.ACTI_VIEWS 
			  		  FROM LOCATION A
			  		  JOIN ACTIVITY_INFO B ON (A.LOCATION_CODE = B.LOCATION_CODE)
			 		 WHERE A.LOCATION_NAME = #{ locationName }) V
			 				)M
			 		WHERE (M.RNUM BETWEEN  #{ startRow } and #{ endRow } )
 	</select>
 	
 	<select id="selectRecommendActivity" resultMap="activityResultMap" parameterType="String">
 	
 	    SELECT 
               ROWNUM
             , V2.*
          FROM (SELECT V.*  
                  FROM (SELECT A.*
                  FROM ACTIVITY_INFO A
                  LEFT JOIN LOCATION B ON (A.LOCATION_CODE = B.LOCATION_CODE)
                 WHERE A.LOCATION_CODE = (SELECT LOCATION_CODE
                                            FROM ACTIVITY_INFO A
                                           WHERE ACTI_NAME = #{ actiName }
                                         ) 
                   AND A.ACTI_NAME <![CDATA[ <> ]]> #{ actiName }                      
                 ORDER BY DBMS_RANDOM.RANDOM
                ) V
        WHERE ROWNUM <![CDATA[ < ]]> 4) V2
 	
 	</select>
 
 	<select id="selectAllList" resultMap="locationAndActivityResultMap">
 		SELECT
      		   A.LOCATION_NAME
     		 , B.ACTI_NAME
     		 , B.PRICE
     		 , B.ACTI_IMG
     		 , B.ACTI_TIP
  		  FROM LOCATION A 
  		  LEFT JOIN ACTIVITY_INFO B ON(A.LOCATION_CODE = B.LOCATION_CODE)
 	</select>
 	
 	<select id="selectLocationOne" resultMap="locationResultMap" parameterType="String">
 		SELECT
      		   A.LOCATION_NAME
             , A.LOCATION_INFO
     		 , A.LOCATION_IMG
     		 , A.GUIDE_TIP
     		 , A.VISIT_MONTH
     		 , A.VISIT_NAME
  		  FROM LOCATION A
  		 WHERE A.LOCATION_NAME = #{ locationName } 
 	</select>
 	
 	<!-- 해당 지역에 대한 액티비티 총 갯수 구하는 쿼리문 -->
 	<select id="totalActivityCount" resultType="_int">
 		SELECT
 			   COUNT(*)
	  	  FROM LOCATION A
	      LEFT JOIN ACTIVITY_INFO B ON (A.LOCATION_CODE = B.LOCATION_CODE)
	     WHERE A.LOCATION_NAME = #{ locationName }
 	</select>
 	
 	<select id="totalActivityCountByMap" resultType="_int">
 		SELECT
 			   COUNT(*)
	  	  FROM LOCATION A
	      LEFT JOIN ACTIVITY_INFO B ON (A.LOCATION_CODE = B.LOCATION_CODE)
          LEFT JOIN ACTI_TYPE D ON(B.ACTI_TYPE_NUM = D.ACTI_TYPE_NUM)
	     <where>
	      A.LOCATION_NAME = #{ locationName }
	     <if test="price1 != null">
	     		AND B.PRICE BETWEEN #{ price1 } AND #{ price2 }
	     	</if>
	     	
	     	<if test="date != '' and date != null">
     		<![CDATA[
     		 AND B.END_DATE > #{ date }
     		 ]]>
	     	</if>
	     	
	     	<if test="sports != null and sports != '' ">
	     	AND D.SECOND_TYPE_NAME IN
	     	<foreach collection="sports" item="arr" index="index" open="(" close=")" separator=",">
	     	 #{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="tickets != null and tickets != '' ">
	     	AND D.SECOND_TYPE_NAME IN
	     	<foreach collection="tickets" item="arr" index="index" open="(" close=")" separator=",">
	     	 #{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="spas != null and spas != '' ">
	     	AND D.SECOND_TYPE_NAME IN
	     	<foreach collection="spas" item="arr" index="index" open="(" close=")" separator=",">
	     	 #{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="tours != null and tours != ''">
	     	AND D.SECOND_TYPE_NAME IN
	     	<foreach collection="tours" item="arr" index="index" open="(" close=")" separator=",">
	     	 #{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="waters != null and waters != ''">
	     	AND D.SECOND_TYPE_NAME IN
	     	<foreach collection="waters" item="arr" index="index" open="(" close=")" separator=",">
	     	 #{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="selectAlls != null and selectAlls != ''">
	     	AND D.SECOND_TYPE_NAME IN
	     	<foreach collection="selectAlls" item="arr" index="index" open="(" close=")" separator=",">
	     	#{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="selectAlls2 != null and selectAlls2 != ''">
	     	AND D.SECOND_TYPE_NAME IN
	     	<foreach collection="selectAlls2" item="arr" index="index" open="(" close=")" separator=",">
	     	#{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="selectAlls3 != null and selectAlls3 != ''">
	     	AND D.SECOND_TYPE_NAME IN
	     	<foreach collection="selectAlls3" item="arr" index="index" open="(" close=")" separator=",">
	     	#{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="selectAlls4 != null and selectAlls4 != ''">
	     	AND D.SECOND_TYPE_NAME IN
	     	<foreach collection="selectAlls4" item="arr" index="index" open="(" close=")" separator=",">
	     	#{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="selectAlls5 != null and selectAlls5 != ''">
	     	AND D.SECOND_TYPE_NAME IN
	     	<foreach collection="selectAlls5" item="arr" index="index" open="(" close=")" separator=",">
	     	#{ arr }
	     	</foreach>
	     	</if>
	     	
	     </where>
	     
	     	<if test="sort != null and sort == 'views'">
	   			ORDER BY B.ACTI_VIEWS
	     	</if>
	     
	       <if test="sort != null and sort == 'random'">
	       	 	ORDER BY DBMS_RANDOM.RANDOM
	       </if>
	       <if test="sort != null and sort == 'price'">
	       	 	ORDER BY B.PRICE ASC
	       </if>
	       <if test="sort != null and sort == 'new'">
	       	 	ORDER BY B.START_DATE DESC
	       </if>
 	</select>
 	<!-- 검색어를 가진 액티비티 총 갯수 -->
 	<select id="totalCountBySearch" resultType="_int">
 		SELECT 
 			   COUNT(*)
	  	  FROM LOCATION A
	      LEFT JOIN ACTIVITY_INFO B ON (A.LOCATION_CODE = B.LOCATION_CODE)
          LEFT JOIN ACTI_TYPE D ON(B.ACTI_TYPE_NUM = D.ACTI_TYPE_NUM)
         <where>
            A.LOCATION_NAME LIKE '%' || #{ searchValue } || '%' 
			OR B.ACTI_NAME LIKE '%' || #{ searchValue } || '%'
            <if test="price1 != null">
	     		AND B.PRICE BETWEEN #{ price1 } AND #{ price2 }
	     	</if>
	     	
	     	<if test="date != '' and date != null">
     		<![CDATA[
     		 AND B.END_DATE > #{ date }
     		 ]]>
	     	</if>
	     	
	     	<if test="sports != null and sports != '' ">
	     	AND D.SECOND_TYPE_NAME IN
	     	<foreach collection="sports" item="arr" index="index" open="(" close=")" separator=",">
	     	 #{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="tickets != null and tickets != '' ">
	     	AND D.SECOND_TYPE_NAME IN
	     	<foreach collection="tickets" item="arr" index="index" open="(" close=")" separator=",">
	     	 #{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="spas != null and spas != '' ">
	     	AND D.SECOND_TYPE_NAME IN
	     	<foreach collection="spas" item="arr" index="index" open="(" close=")" separator=",">
	     	 #{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="tours != null and tours != ''">
	     	AND D.SECOND_TYPE_NAME IN
	     	<foreach collection="tours" item="arr" index="index" open="(" close=")" separator=",">
	     	 #{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="waters != null and waters != ''">
	     	AND D.SECOND_TYPE_NAME IN
	     	<foreach collection="waters" item="arr" index="index" open="(" close=")" separator=",">
	     	 #{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="selectAlls != null and selectAlls != ''">
	     	AND D.SECOND_TYPE_NAME IN
	     	<foreach collection="selectAlls" item="arr" index="index" open="(" close=")" separator=",">
	     	#{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="selectAlls2 != null and selectAlls2 != ''">
	     	AND D.SECOND_TYPE_NAME IN
	     	<foreach collection="selectAlls2" item="arr" index="index" open="(" close=")" separator=",">
	     	#{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="selectAlls3 != null and selectAlls3 != ''">
	     	AND D.SECOND_TYPE_NAME IN
	     	<foreach collection="selectAlls3" item="arr" index="index" open="(" close=")" separator=",">
	     	#{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="selectAlls4 != null and selectAlls4 != ''">
	     	AND D.SECOND_TYPE_NAME IN
	     	<foreach collection="selectAlls4" item="arr" index="index" open="(" close=")" separator=",">
	     	#{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="selectAlls5 != null and selectAlls5 != ''">
	     	AND D.SECOND_TYPE_NAME IN
	     	<foreach collection="selectAlls5" item="arr" index="index" open="(" close=")" separator=",">
	     	#{ arr }
	     	</foreach>
	     	</if>
	     </where>
	     	<if test="sort != null and sort == 'views'">
	   			ORDER BY B.ACTI_VIEWS
	     	</if>
	       <if test="sort != null and sort == 'random'">
	       	 	ORDER BY DBMS_RANDOM.RANDOM
	       </if>
	       <if test="sort != null and sort == 'price'">
	       	 	ORDER BY B.PRICE ASC
	       </if>
	       <if test="sort != null and sort == 'new'">
	       	 	ORDER BY B.START_DATE DESC
	       </if> 
 	</select>
 	
 	<!-- 검색어를 포함한 액티비티 검색 쿼리문 -->
 	<select id="searchActivity" resultMap="activityResultMap" parameterType="hashMap">
 	 	SELECT  M.RNUM
            , M.ACTI_NAME
            , M.PRICE
            , M.START_DATE
            , M.END_DATE
            , M.ACTI_TIP
            , M.ACTI_IMG
            , M.ACTI_TYPE_NUM
            , M.ACTI_VIEWS
            , M.SECOND_TYPE_NAME
		 FROM  (SELECT ROWNUM RNUM
			             , V.ACTI_NAME
			             , V.PRICE
			             , V.START_DATE
			             , V.END_DATE
			             , V.ACTI_TIP
			             , V.ACTI_IMG
			             , V.ACTI_TYPE_NUM
			             , V.ACTI_VIEWS
			             , V.SECOND_TYPE_NAME
					  FROM (SELECT
					               B.ACTI_NAME
					             , B.PRICE
					             , B.START_DATE
					             , B.END_DATE
					             , B.ACTI_TIP
					             , B.ACTI_IMG
					             , B.ACTI_TYPE_NUM
					             , B.ACTI_VIEWS
					             , D.SECOND_TYPE_NAME
						  	  FROM LOCATION A
                              JOIN ACTIVITY_INFO B ON (A.LOCATION_CODE = B.LOCATION_CODE)
                              JOIN ACTI_TYPE D ON(B.ACTI_TYPE_NUM = D.ACTI_TYPE_NUM)
						     WHERE A.LOCATION_NAME LIKE '%' || #{ searchValue } || '%' 
						       OR B.ACTI_NAME LIKE '%' || #{ searchValue } || '%') V    
						       
						       )M
            <where>
             M.RNUM BETWEEN  #{ startRow } AND #{ endRow } 
            <if test="price1 != null">
	     		AND M.PRICE BETWEEN #{ price1 } AND #{ price2 }
	     	</if>
	     	
	     	<if test="date != '' and date != null">
     		<![CDATA[
     		 AND M.END_DATE > #{ date }
     		 ]]>
	     	</if>
	     	
	     	<if test="sports != null and sports != '' ">
	     	AND M.SECOND_TYPE_NAME IN
	     	<foreach collection="sports" item="arr" index="index" open="(" close=")" separator=",">
	     	 #{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="tickets != null and tickets != '' ">
	     	AND M.SECOND_TYPE_NAME IN
	     	<foreach collection="tickets" item="arr" index="index" open="(" close=")" separator=",">
	     	 #{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="spas != null and spas != '' ">
	     	AND M.SECOND_TYPE_NAME IN
	     	<foreach collection="spas" item="arr" index="index" open="(" close=")" separator=",">
	     	 #{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="tours != null and tours != ''">
	     	AND M.SECOND_TYPE_NAME IN
	     	<foreach collection="tours" item="arr" index="index" open="(" close=")" separator=",">
	     	 #{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="waters != null and waters != ''">
	     	AND M.SECOND_TYPE_NAME IN
	     	<foreach collection="waters" item="arr" index="index" open="(" close=")" separator=",">
	     	 #{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="selectAlls != null and selectAlls != ''">
	     	AND M.SECOND_TYPE_NAME IN
	     	<foreach collection="selectAlls" item="arr" index="index" open="(" close=")" separator=",">
	     	#{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="selectAlls2 != null and selectAlls2 != ''">
	     	AND M.SECOND_TYPE_NAME IN
	     	<foreach collection="selectAlls2" item="arr" index="index" open="(" close=")" separator=",">
	     	#{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="selectAlls3 != null and selectAlls3 != ''">
	     	AND M.SECOND_TYPE_NAME IN
	     	<foreach collection="selectAlls3" item="arr" index="index" open="(" close=")" separator=",">
	     	#{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="selectAlls4 != null and selectAlls4 != ''">
	     	AND M.SECOND_TYPE_NAME IN
	     	<foreach collection="selectAlls4" item="arr" index="index" open="(" close=")" separator=",">
	     	#{ arr }
	     	</foreach>
	     	</if>
	     	
	     	<if test="selectAlls5 != null and selectAlls5 != ''">
	     	AND M.SECOND_TYPE_NAME IN
	     	<foreach collection="selectAlls5" item="arr" index="index" open="(" close=")" separator=",">
	     	#{ arr }
	     	</foreach>
	     	</if>
	     </where>
	     	<if test="sort != null and sort == 'views'">
	   			ORDER BY M.ACTI_VIEWS
	     	</if>
	       <if test="sort != null and sort == 'random'">
	       	 	ORDER BY DBMS_RANDOM.RANDOM
	       </if>
	       <if test="sort != null and sort == 'price'">
	       	 	ORDER BY M.PRICE ASC
	       </if>
	       <if test="sort != null and sort == 'new'">
	       	 	ORDER BY M.START_DATE DESC
	       </if>
 	</select>
 	
 	<!-- 지역별 액티비티 랜덤 추천용 쿼리문 -->
 	<select id="selectRandomList" resultMap="locationAndActivityResultMap" parameterType="string">
 		SELECT
       		   A.LOCATION_NAME
     		 , A.LOCATION_INFO
     	 	 , A.LOCATION_IMG
     		 , A.GUIDE_TIP
     		 , A.VISIT_MONTH
             , A.VISIT_NAME
     		 , B.ACTI_NUM
     		 , B.ACTI_NAME
     		 , B.LOCATION
     		 , B.PRICE
     		 , B.START_DATE
     		 , B.END_DATE
     		 , B.ACTI_TIP
     		 , B.ACTI_IMG
     		 , B.LOCATION_CODE
     		 , B.ACTI_TYPE_NUM
     		 , B.USER_ID
     		 , B.ACTI_VIEWS 
  		  FROM LOCATION A
  		  JOIN ACTIVITY_INFO B ON (A.LOCATION_CODE = B.LOCATION_CODE)
 		 WHERE A.LOCATION_NAME = #{ locationName }
 		 ORDER BY DBMS_RANDOM.RANDOM
 	</select>
 	
 	<update id="updateReviewRec">
 	    UPDATE ACTI_REVIEW
           SET ACTI_REVIEW_REC = #{ recommend } 
         WHERE ACTI_REVIEW_NUM = #{ num }
 	</update>
 	
 	<update id="updateRepYn">
 	    UPDATE ACTI_REVIEW
           SET ACTI_REVIEW_REP_YN = #{ recYn } 
         WHERE ACTI_REVIEW_NUM = #{ num }
 	</update>
 	
 	<select id="selectActiReviewTotalCount" resultType="_int">
 	    SELECT
               COUNT(*)
          FROM ACTI_REVIEW A
          JOIN ACTIVITY_INFO B ON (A.ACTI_NUM = B.ACTI_NUM)
         WHERE B.ACTI_NAME = #{ actiName }
 	</select>
 	
 	<select id="selectReviewList" resultMap="reviewResultMap" parameterType="HashMap">
 	
 	    SELECT C.RNUM
             , C.*
          FROM (SELECT ROWNUM RNUM 
                     , B.*
                  FROM (SELECT A.*
                             , F.CHOOSE_OPTION
                          FROM ACTI_REVIEW A
                          LEFT JOIN ACTIVITY_INFO B ON(A.ACTI_NUM = B.ACTI_NUM)
                          LEFT JOIN REVIEW_HIS C ON (A.ACTI_REVIEW_NUM = C.REVIEW_NUM)
                          LEFT JOIN ACTI_PAYMENT D ON (C.PAY_NUM = D.PAY_NUM)
                          LEFT JOIN PAY_HIS E ON (D.PAY_NUM = E.PAY_NUM)
                          LEFT JOIN CART F ON (E.CART_NUM = F.CART_NUM)
                         WHERE B.ACTI_NAME = #{ actiName }
                          <if test="sort != null and sort == 'rec'">
	                      ORDER BY A.ACTI_REVIEW_REC DESC
	                      </if>
	                      <if test="sort != null and sort == 'new'">
                          ORDER BY A.ACTI_REVIEW_DATE DESC
	                      </if>
	                      <if test="sort != null and sort == 'high'">
	                      ORDER BY A.ACTI_REVIEW_STAR DESC
	                      </if>
	                      <if test="sort != null and sort == 'row'">
	                      ORDER BY A.ACTI_REVIEW_STAR ASC
                          </if>
                       )B
               )C
         WHERE C.RNUM BETWEEN #{ selectCriteria.startRow } and #{ selectCriteria.endRow }
         
 	</select>
 	<!-- 클릭시 조회수 증가용 쿼리문 -->
 	<update id="updateViews">
 		UPDATE ACTIVITY_INFO
   SET ACTI_VIEWS = (SELECT 
                            ACTI_VIEWS + 1
                       FROM ACTIVITY_INFO
                      WHERE ACTI_NAME = #{ actiName } )
 WHERE ACTI_NAME = #{ actiName } 
 	</update>
 	
 	<insert id="insertPayment">
 	    INSERT
          INTO ACTI_PAYMENT
        (
          PAY_NUM
        , PAY_DATE
        )
        VALUES
        (
          ('PAY_NUM' || TO_CHAR(SEQ_PAY_NUM.nextval))
        , DEFAULT
        )
 	</insert>
 	
 	<select id="selectPayment" resultMap="paymentResultMap">
 	    SELECT RNUM
             , V2.*
          FROM (SELECT ROWNUM RNUM
                     , V.*
                  FROM (SELECT *
                          FROM ACTI_PAYMENT
                         ORDER BY PAY_NUM DESC
                       )V
               )V2
         WHERE RNUM <![CDATA[ < ]]> 2
 	</select>
 	
 	<update id="updateStar">
 		UPDATE ACTIVITY_INFO
  		   SET ACTI_STAR = (SELECT ROUND(AVG(B.ACTI_REVIEW_STAR),1)
                      FROM ACTIVITY_INFO A
                      JOIN ACTI_REVIEW B ON(A.ACTI_NUM = B.ACTI_NUM)
                      WHERE A.ACTI_NUM = #{ actiNum })
 	 	 WHERE ACTI_NUM =  #{ actiNum } 
 	</update>
 </mapper>